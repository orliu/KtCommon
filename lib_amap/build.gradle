apply plugin: 'com.android.library'

android {

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {

    compile "com.android.support:appcompat-v7:${rootProject.ext.supportLibraryVersion}"
    compile "com.android.support:design:${rootProject.ext.supportLibraryVersion}"
    compile "com.android.support:cardview-v7:${rootProject.ext.supportLibraryVersion}"
    compile project(':lib_base')

    // amap 2d
    compile 'com.amap.api:map2d:latest.integration'
    // amap location
    compile 'com.amap.api:location:latest.integration'
    // amap search
    compile 'com.amap.api:search:latest.integration'
}
configurations.all {

    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion rootProject.ext.supportLibraryVersion
            }
        }
    }
}